version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: siak_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-siak}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-siak_password}
      POSTGRES_DB: ${DB_NAME:-siak}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data_sources/init_siak:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U siak"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - siak_network

  minio:
    image: minio/minio:latest
    container_name: siak_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - siak_network

  # Create required buckets in MinIO
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    environment:
      MINIO_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 $${MINIO_USER} $${MINIO_PASSWORD};
      /usr/bin/mc mb myminio/raw;
      /usr/bin/mc mb myminio/processed;
      exit 0;
      "
    networks:
      - siak_network

volumes:
  postgres_data:
  minio_data:

networks:
  siak_network:
    driver: bridge
